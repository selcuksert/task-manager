version: '3'

services:
  # See https://doc.traefik.io/traefik/providers/docker/#docker-api-access
  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      CONTAINERS: 1

  traefik:
    container_name: "traefik"
    # The official v2 Traefik docker image
    image: "traefik:v2.4"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.endpoint=tcp://socket-proxy:2375"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.pgadm.address=:9080"
      - "--entrypoints.sr.address=:8081"
      - "--entrypoints.rp.address=:8082"
      - "--entrypoints.kc.address=:8083"
      - "--entrypoints.gf.address=:3000"
    depends_on:
      - socket-proxy
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
      # PgAdmin
      - "9080:9080"
      # Schema Registry
      - "8081:8081"
      # REST Proxy
      - "8082:8082"
      # Kafka Connect
      - "8083:8083"
      # Grafana
      - "3000:3000"

  zookeeper:
    build:
      context: ./kafka/base
      dockerfile: Dockerfile
    image: custom/kafka/base
    container_name: zookeeper
    environment:
      PROM_AGENT_PORT: ${PROM_AGENT_PORT}
    entrypoint: [ "startKeeper.sh" ]

  kafka-broker-1:
    build:
      context: ./kafka/base
      dockerfile: Dockerfile
    image: custom/kafka/base
    container_name: kafka-broker-1
    depends_on:
      - zookeeper
    environment:
      PROM_AGENT_PORT: ${PROM_AGENT_PORT}

  kafka-broker-2:
    build:
      context: ./kafka/base
      dockerfile: Dockerfile
    image: custom/kafka/base
    container_name: kafka-broker-2
    depends_on:
      - zookeeper
    environment:
      PROM_AGENT_PORT: ${PROM_AGENT_PORT}

  kafka-broker-3:
    build:
      context: ./kafka/base
      dockerfile: Dockerfile
    image: custom/kafka/base
    container_name: kafka-broker-3
    depends_on:
      - zookeeper
    environment:
      PROM_AGENT_PORT: ${PROM_AGENT_PORT}

  add-topics:
    image: custom/kafka/base
    depends_on:
      - kafka-broker-1
    entrypoint: [ "addTopic.sh", "kafka-broker-1", "9091", "3", "3", "${TOPIC_NAMES}" ]

  appdb:
    image: postgres:13-alpine
    container_name: appdb
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${APP_DB_NAME}
      TZ: Europe/Istanbul
    volumes:
      - app-db-data:/var/lib/postgresql/data

  idpdb:
    image: postgres:13-alpine
    container_name: idpdb
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${IDP_DB_NAME}
      TZ: Europe/Istanbul
    volumes:
      - idp-db-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:5
    container_name: pgadmin
    depends_on:
      - traefik
    volumes:
      - ./pgadmin/config/servers.json:/pgadmin4/servers.json
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADM_USER}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADM_PASS}
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
      PGADMIN_LISTEN_PORT: ${PG_ADM_PORT}
      PGADMIN_SERVER_JSON_FILE: /pgadmin4/servers.json
      TZ: Europe/Istanbul
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`web.poc.local`)"
      - "traefik.http.routers.pgadmin.entrypoints=pgadm"
      - "traefik.http.routers.pgadmin.service=pgadmin-service"
      - "traefik.http.services.pgadmin-service.loadbalancer.server.port=9080"

  schemaregistry:
    build:
      context: ./kafka/schemaregistry
      dockerfile: Dockerfile
    image: custom/kafka/schemaregistry
    container_name: schemaregistry
    depends_on:
      - traefik
      - zookeeper
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    command: [ "zookeeper", "2181", "avro-schema-topic", "PLAINTEXT:\\/\\/kafka-broker-1:9091, PLAINTEXT:\\/\\/kafka-broker-2:9092, PLAINTEXT:\\/\\/kafka-broker-3:9093" ]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sr.rule=Host(`web.poc.local`)"
      - "traefik.http.routers.sr.entrypoints=sr"
      - "traefik.http.routers.sr.service=sr-service"
      - "traefik.http.services.sr-service.loadbalancer.server.port=8081"

  restproxy:
    build:
      context: ./kafka/restproxy
      dockerfile: Dockerfile
    image: custom/kafka/restproxy
    container_name: restproxy
    depends_on:
      - traefik
      - zookeeper
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    command: [ "zookeeper", "2181", "PLAINTEXT:\\/\\/kafka-broker-1:9091, PLAINTEXT:\\/\\/kafka-broker-2:9092, PLAINTEXT:\\/\\/kafka-broker-3:9093" ]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.restproxy.rule=Host(`web.poc.local`)"
      - "traefik.http.routers.restproxy.entrypoints=rp"
      - "traefik.http.routers.restproxy.service=restproxy-service"
      - "traefik.http.services.restproxy-service.loadbalancer.server.port=8082"

  kafkaconnect:
    build:
      context: ./kafka/connect
      dockerfile: Dockerfile
    image: custom/kafka/connect
    container_name: kafkaconnect
    depends_on:
      - traefik
      - zookeeper
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - appdb
      - schemaregistry
    environment:
      TOPIC_NAMES: ${KCON_TOPIC_NAMES}
      PK_FIELDS: ${KCON_PK_FIELDS}
      DB_NAME: ${APP_DB_NAME}
      CONNECTION_USER: ${DB_USER}
      CONNECTION_PASSWORD: ${DB_PASS}
      KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kafkaconnect.rule=Host(`web.poc.local`)"
      - "traefik.http.routers.kafkaconnect.entrypoints=kc"
      - "traefik.http.routers.kafkaconnect.service=kafkaconnect-service"
      - "traefik.http.services.kafkaconnect-service.loadbalancer.server.port=8083"
    command: [ "zookeeper", "2181", "kafka-broker-1:9091, kafka-broker-2:9092, kafka-broker-3:9093", "http://schemaregistry:8081" , "appdb", "5432", "postgresql" ]

  kmonitor:
    build:
      context: ./kafka/monitor
      dockerfile: Dockerfile
    image: custom/kafka/monitor
    container_name: kmonitor
    depends_on:
      - traefik
      - zookeeper
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    environment:
      KAFKA_JMX_ADDR: "'zookeeper:1123', 'kafka-broker-1:1123', 'kafka-broker-2:1123', 'kafka-broker-3:1123'"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`web.poc.local`)"
      - "traefik.http.routers.grafana.entrypoints=gf"
      - "traefik.http.routers.grafana.service=grafana-service"
      - "traefik.http.services.grafana-service.loadbalancer.server.port=3000"

  web:
    image: nginx:stable-alpine
    container_name: web
    volumes:
      - ./app/config/default.conf.template:/etc/nginx/templates/default.conf.template
      - ./app/web/build:/usr/share/nginx/html
    environment:
      NGINX_PORT: 80
      TZ: Europe/Istanbul
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`web.poc.local`) && PathPrefix (`/`)"
      - "traefik.http.routers.web.entrypoints=http"
      - "traefik.http.routers.web.service=web-service"
      - "traefik.http.services.web-service.loadbalancer.server.port=80"

  keycloak:
    container_name: keycloak
    image: jboss/keycloak
    environment:
      KEYCLOAK_USER: ${KCL_ADM_USER}
      KEYCLOAK_PASSWORD: ${KCL_ADM_PASS}
      PROXY_ADDRESS_FORWARDING: ${PROXY_ADDRESS_FORWARDING}
      DB_VENDOR: postgres
      DB_ADDR: idpdb
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASS}
      DB_DATABASE: ${IDP_DB_NAME}
    depends_on:
      - traefik
      - idpdb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`idp.poc.local`)"
      - "traefik.http.routers.keycloak.entrypoints=http"
      - "traefik.http.routers.keycloak.service=keycloak-service"
      - "traefik.http.services.keycloak-service.loadbalancer.server.port=8080"

  openldap:
    container_name: openldap
    image: osixia/openldap:1.3.0
    volumes:
      - ./ldap/config/bootstrap.ldif:/container/service/slapd/assets/config/bootstrap/ldif/50-bootstrap.ldif
      - ./ldap/config/modify.ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom/modify.ldif
    environment:
      LDAP_ORGANISATION: ${LDAP_ORG_NAME}
      LDAP_DOMAIN: ${LDAP_DOMAIN}
      LDAP_ADMIN_PASSWORD: ${LDAP_ADMIN_PASSWORD}
      LDAP_LOG_LEVEL: 256
      TZ: Europe/Istanbul
    command: [ "--copy-service" ]

volumes:
  app-db-data:
    name: app-db-data
    driver: local
  idp-db-data:
    name: idp-db-data
    driver: local