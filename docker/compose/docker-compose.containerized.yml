version: '3'

services:
  kafka-broker-1:
    command: [ "zookeeper", "2181", "1", "kafka-broker-1", "9091" ]

  kafka-broker-2:
    command: [ "zookeeper", "2181", "2", "kafka-broker-2", "9092" ]

  kafka-broker-3:
    command: [ "zookeeper", "2181", "3", "kafka-broker-3", "9093" ]

  task-processor:
    build:
      context: ./app/service
      dockerfile: Dockerfile
    image: custom/app/service
    volumes:
      - ./app/service/bin/task-processor-0.0.1-SNAPSHOT.jar:/opt/app/bin/app.jar
      - ./app/service/ks-state:/var/lib/ks-state
    environment:
      DEPS: "kafka-broker-1:19091, kafka-broker-2:19092, kafka-broker-3:19093, schemaregistry:8081, keycloak:8080"
      SERVER_PORT: 8080
      BROKER_1: kafka-broker-1:19091
      BROKER_2: kafka-broker-2:19092
      BROKER_3: kafka-broker-3:19093
      SR_PROT: http
      SR_HOST: schemaregistry
      SR_PORT: 8081
      IDP_PROT: http
      IDP_HOST: keycloak
      IDP_PORT: 8080
      STATE_DIR_ROOT: /var/lib/ks-state
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.task-processor.rule=Host(`web.poc.local`) && PathPrefix(`/api/task/processor`)"
      - "traefik.http.routers.task-processor.entrypoints=http"
      - "traefik.http.routers.task-processor.service=task-processor-service"
      - "traefik.http.services.task-processor-service.loadbalancer.server.port=8080"

  task-reader:
    build:
      context: ./app/service
      dockerfile: Dockerfile
    image: custom/app/service
    volumes:
      - ./app/service/bin/task-reader-0.0.1-SNAPSHOT.jar:/opt/app/bin/app.jar
    environment:
      DEPS: "appdb:5432, keycloak:8080"
      SERVER_PORT: 8080
      IDP_PROT: http
      IDP_HOST: keycloak
      IDP_PORT: 8080
      DB_HOST: appdb
      DB_PORT: 5432
      DB_NAME: ${APP_DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.task-reader.rule=Host(`web.poc.local`) && PathPrefix(`/api/task/reader`)"
      - "traefik.http.routers.task-reader.entrypoints=http"
      - "traefik.http.routers.task-reader.service=task-reader-service"
      - "traefik.http.services.task-reader-service.loadbalancer.server.port=8080"

  task-writer:
    build:
      context: ./app/service
      dockerfile: Dockerfile
    image: custom/app/service
    volumes:
      - ./app/service/bin/task-writer-0.0.1-SNAPSHOT.jar:/opt/app/bin/app.jar
    environment:
      DEPS: "kafka-broker-1:19091, kafka-broker-2:19092, kafka-broker-3:19093, schemaregistry:8081, keycloak:8080"
      SERVER_PORT: 8080
      BROKER_1: kafka-broker-1:19091
      BROKER_2: kafka-broker-2:19092
      BROKER_3: kafka-broker-3:19093
      SR_PROT: http
      SR_HOST: schemaregistry
      SR_PORT: 8081
      IDP_PROT: http
      IDP_HOST: keycloak
      IDP_PORT: 8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.task-writer.rule=Host(`web.poc.local`) && PathPrefix(`/api/task/writer`)"
      - "traefik.http.routers.task-writer.entrypoints=http"
      - "traefik.http.routers.task-writer.service=task-writer-service"
      - "traefik.http.services.task-writer-service.loadbalancer.server.port=8080"

  user-reader:
    build:
      context: ./app/service
      dockerfile: Dockerfile
    image: custom/app/service
    volumes:
      - ./app/service/bin/user-reader-0.0.1-SNAPSHOT.jar:/opt/app/bin/app.jar
    environment:
      DEPS: "appdb:5432, keycloak:8080"
      SERVER_PORT: 8080
      IDP_PROT: http
      IDP_HOST: keycloak
      IDP_PORT: 8080
      DB_HOST: appdb
      DB_PORT: 5432
      DB_NAME: ${APP_DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-reader.rule=Host(`web.poc.local`) && PathPrefix(`/api/user/reader`)"
      - "traefik.http.routers.user-reader.entrypoints=http"
      - "traefik.http.routers.user-reader.service=user-reader-service"
      - "traefik.http.services.user-reader-service.loadbalancer.server.port=8080"

  user-writer:
    build:
      context: ./app/service
      dockerfile: Dockerfile
    image: custom/app/service
    volumes:
      - ./app/service/bin/user-writer-0.0.1-SNAPSHOT.jar:/opt/app/bin/app.jar
    environment:
      DEPS: "kafka-broker-1:19091, kafka-broker-2:19092, kafka-broker-3:19093, schemaregistry:8081, keycloak:8080"
      SERVER_PORT: 8080
      BROKER_1: kafka-broker-1:19091
      BROKER_2: kafka-broker-2:19092
      BROKER_3: kafka-broker-3:19093
      SR_PROT: http
      SR_HOST: schemaregistry
      SR_PORT: 8081
      IDP_PROT: http
      IDP_HOST: keycloak
      IDP_PORT: 8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-writer.rule=Host(`web.poc.local`) && PathPrefix(`/api/user/writer`)"
      - "traefik.http.routers.user-writer.entrypoints=http"
      - "traefik.http.routers.user-writer.service=user-writer-service"
      - "traefik.http.services.user-writer-service.loadbalancer.server.port=8080"