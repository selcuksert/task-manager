version: '3'

services:
  # See https://doc.traefik.io/traefik/providers/docker/#docker-api-access
  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      CONTAINERS: 1

  traefik:
    container_name: "traefik"
    # The official v2 Traefik docker image
    image: "traefik:v2.4"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.endpoint=tcp://socket-proxy:2375"      
      - "--providers.file=true"
      - "--providers.file.filename=/etc/traefik/rules.toml"
      - "--providers.file.watch=true"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.db.address=:5432"
      - "--entrypoints.zk.address=:2181"
      - "--entrypoints.kb1.address=:19091"
      - "--entrypoints.kb2.address=:19092"
      - "--entrypoints.kb3.address=:19093"
      - "--entrypoints.gf.address=:3000"
      - "--entrypoints.prom.address=:9090"
      - "--entrypoints.pgadm.address=:9080"
      - "--entrypoints.sr.address=:8081"
      - "--entrypoints.rp.address=:8082"
      - "--entrypoints.kc.address=:8083"
    volumes:
      - "./traefik/config/rules.toml:/etc/traefik/rules.toml"    
    depends_on:
      - socket-proxy
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
      - "2181:2181"      
      - "5432:5432"
      - "19091:19091"
      - "19092:19092"
      - "19093:19093"
      - "3000:3000"
      - "9090:9090"
      - "9080:9080"
      - "8081:8081"

  zookeeper:
    build: 
      context: ./kafka/base
      dockerfile: Dockerfile
    image: custom/kafka/base
    container_name: zookeeper
    entrypoint: ["startKeeper.sh"]
    depends_on:
      - traefik
    environment:
      PROM_AGENT_PORT: 1123
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.zk.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.zk.entrypoints=zk"
      - "traefik.tcp.routers.zk.service=zk-service"
      - "traefik.tcp.services.zk-service.loadbalancer.server.port=2181"

  kafka-broker-1:
    build: 
      context: ./kafka/base
      dockerfile: Dockerfile
    image: custom/kafka/base
    container_name: kafka-broker-1
    depends_on:
      - traefik
      - zookeeper
    environment:
      PROM_AGENT_PORT: 1123
    command: ["zookeeper", "2181", "1", "kafka-broker-1", "9091"]
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.kb1.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.kb1.entrypoints=kb1"
      - "traefik.tcp.routers.kb1.service=kb1-service"
      - "traefik.tcp.services.kb1-service.loadbalancer.server.port=19091"

  kafka-broker-2:
    build: 
      context: ./kafka/base
      dockerfile: Dockerfile
    image: custom/kafka/base
    container_name: kafka-broker-2
    depends_on:
      - traefik
      - zookeeper
    environment:
      PROM_AGENT_PORT: 1123
    command: ["zookeeper", "2181", "2", "kafka-broker-2", "9092"]
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.kb2.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.kb2.entrypoints=kb2"
      - "traefik.tcp.routers.kb2.service=kb2-service"
      - "traefik.tcp.services.kb2-service.loadbalancer.server.port=19092"

  kafka-broker-3:
    build: 
      context: ./kafka/base
      dockerfile: Dockerfile
    image: custom/kafka/base
    container_name: kafka-broker-3
    depends_on:
      - traefik
      - zookeeper
    environment:
      PROM_AGENT_PORT: 1123
    command: ["zookeeper", "2181", "3", "kafka-broker-3", "9093"]
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.kb3.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.kb3.entrypoints=kb3"
      - "traefik.tcp.routers.kb3.service=kb3-service"
      - "traefik.tcp.services.kb3-service.loadbalancer.server.port=19093"

  add-topics:
    image: custom/kafka/base
    depends_on:
      - kafka-broker-1
    entrypoint: ["addTopic.sh", "kafka-broker-1", "9091", "3", "3", "tasks,users"]

  dbservice:
    image: postgres:13-alpine
    container_name: postgres
    depends_on:
      - traefik
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: db1234
      POSTGRES_DB: taskdb
      TZ: Europe/Istanbul
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.db.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.db.entrypoints=db"
      - "traefik.tcp.routers.db.service=db-service"
      - "traefik.tcp.services.db-service.loadbalancer.server.port=5432"

  pgadmin:
    image: dpage/pgadmin4:5
    container_name: pgadmin
    depends_on:
      - traefik
    volumes: 
      - ./pgadmin/config/servers.json:/pgadmin4/servers.json
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@corp.com
      PGADMIN_DEFAULT_PASSWORD: pg1234
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
      PGADMIN_LISTEN_PORT: 9080
      PGADMIN_SERVER_JSON_FILE: /pgadmin4/servers.json
      TZ: Europe/Istanbul
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`web.poc.local`)"
      - "traefik.http.routers.pgadmin.entrypoints=pgadm"
      - "traefik.http.routers.pgadmin.service=pgadmin-service"
      - "traefik.http.services.pgadmin-service.loadbalancer.server.port=9080"

  schemaregistry:
    build: 
      context: ./kafka/schemaregistry
      dockerfile: Dockerfile
    image: custom/kafka/schemaregistry
    container_name: schemaregistry
    depends_on:
      - traefik
      - zookeeper
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    command: ["zookeeper", "2181", "avro-schema-topic", "PLAINTEXT:\\/\\/kafka-broker-1:9091, PLAINTEXT:\\/\\/kafka-broker-2:9092, PLAINTEXT:\\/\\/kafka-broker-3:9093"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sr.rule=Host(`web.poc.local`)"
      - "traefik.http.routers.sr.entrypoints=sr"
      - "traefik.http.routers.sr.service=sr-service"
      - "traefik.http.services.sr-service.loadbalancer.server.port=8081"

  restproxy:
    build: 
      context: ./kafka/restproxy
      dockerfile: Dockerfile
    image: custom/kafka/restproxy
    container_name: restproxy
    depends_on:
      - traefik
      - zookeeper
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    command: ["zookeeper", "2181", "PLAINTEXT:\\/\\/kafka-broker-1:9091, PLAINTEXT:\\/\\/kafka-broker-2:9092, PLAINTEXT:\\/\\/kafka-broker-3:9093"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.restproxy.rule=Host(`web.poc.local`)"
      - "traefik.http.routers.restproxy.entrypoints=rp"
      - "traefik.http.routers.restproxy.service=restproxy-service"
      - "traefik.http.services.restproxy-service.loadbalancer.server.port=8082"

  kafkaconnect:
    build: 
      context: ./kafka/connect
      dockerfile: Dockerfile
    image: custom/kafka/connect
    container_name: kafkaconnect
    depends_on:
      - traefik
      - zookeeper
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - dbservice
      - schemaregistry
    environment:
      TOPIC_NAMES: tasks,users
      PK_FIELDS: id
      DB_NAME: taskdb
      CONNECTION_USER: dbuser
      CONNECTION_PASSWORD: db1234
      KEY_CONVERTER: org.apache.kafka.connect.converters.LongConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kafkaconnect.rule=Host(`web.poc.local`)"
      - "traefik.http.routers.kafkaconnect.entrypoints=kc"
      - "traefik.http.routers.kafkaconnect.service=kafkaconnect-service"
      - "traefik.http.services.kafkaconnect-service.loadbalancer.server.port=8083"
    command: ["zookeeper", "2181", "kafka-broker-1:9091, kafka-broker-2:9092, kafka-broker-3:9093", "http://schemaregistry:8081" , "dbservice", "5432","postgresql"]

  kmonitor:
    build: 
      context: ./kafka/monitor
      dockerfile: Dockerfile
    image: custom/kafka/monitor
    container_name: kmonitor
    depends_on:
      - traefik
      - zookeeper
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    environment:
      KAFKA_JMX_ADDR: "'zookeeper:1123', 'kafka-broker-1:1123', 'kafka-broker-2:1123', 'kafka-broker-3:1123'"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`web.poc.local`)"
      - "traefik.http.routers.grafana.entrypoints=gf"
      - "traefik.http.routers.grafana.service=grafana-service"
      - "traefik.http.services.grafana-service.loadbalancer.server.port=3000"
      - "traefik.http.routers.prom.rule=Host(`web.poc.local`)"
      - "traefik.http.routers.prom.entrypoints=prom"
      - "traefik.http.routers.prom.service=prom-service"
      - "traefik.http.services.prom-service.loadbalancer.server.port=9090"
      
  web:
    image: nginx:stable-alpine
    container_name: web
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - dbservice
    volumes:
      - ./app/config/default.conf.template:/etc/nginx/templates/default.conf.template
      - ./app/web/build:/usr/share/nginx/html
    environment:
      NGINX_PORT: 80
      TZ: Europe/Istanbul
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`web.poc.local`)"
      - "traefik.http.routers.web.entrypoints=http"
      - "traefik.http.routers.web.service=web-service"
      - "traefik.http.services.web-service.loadbalancer.server.port=80"
      