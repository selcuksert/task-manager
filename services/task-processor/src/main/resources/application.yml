debug: false

server:
  port: 8094

custom:
  ktable:
    detail: detail-ktable

spring:
  cloud:
    stream:
      function:
        definition: log;detail
      bindings:
        log-in-0:
          destination: tasks
          consumer:
            use-native-decoding: true
        log-in-1:
          destination: users
          consumer:
            use-native-decoding: true
        detail-in-0:
          destination: tasks
          consumer:
            use-native-decoding: true
        detail-in-1:
          destination: users
          consumer:
            use-native-decoding: true
            materialized-as: user-table
      kafka:
        streams:
          binder:
            functions:
              log:
                applicationId: ${spring.application.name}-log
              detail:
                applicationId: ${spring.application.name}-detail
            brokers:
            - localhost:19091
            - localhost:19092
            - localhost:19093
            configuration:
              '[schema.registry.url]': http://web.poc.local:8081
              '[default.key.serde]': org.apache.kafka.common.serialization.Serdes$StringSerde
              '[default.value.serde]': io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
              '[default.deserialization.exception.handler]': org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
              '[processing.guarantee]': exactly_once
              '[state.dir]': /tmp/state/kafka-streams
            autoCreateTopics: false
            autoAddPartitions: false
  application:
    name: task-processor