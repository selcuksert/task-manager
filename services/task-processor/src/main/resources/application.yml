debug: false

server:
  port: ${SERVER_PORT:8094}

custom:
  ktable:
    detail: detail-ktable
    count: count-ktable
  security:
    provider:
      jwt:
        role:
          key: roles
        claim:
          key: realm_access

spring:
  cloud:
    stream:
      function:
        definition: log;detail;activity
      bindings:
        log-in-0:
          destination: tasks
          consumer:
            use-native-decoding: true
        log-in-1:
          destination: users
          consumer:
            use-native-decoding: true
        detail-in-0:
          destination: tasks
          consumer:
            use-native-decoding: true
        detail-in-1:
          destination: users
          consumer:
            use-native-decoding: true
            materialized-as: user-table
        detail-out-0:
          destination: taskdetails
          producer:
            use-native-decoding: true
        activity-in-0:
          destination: tasks
          consumer:
            use-native-decoding: true
        activity-out-0:
          destination: taskcount
          producer:
            use-native-decoding: true
      kafka:
        streams:
          bindings:
            activity-in-0:
              consumer:
                timestampExtractorBeanName: "timestampExtractor"
          binder:
            functions:
              log:
                applicationId: ${spring.application.name}-log
              detail:
                applicationId: ${spring.application.name}-detail
              activity:
                applicationId: ${spring.application.name}-activity
            configuration:
              '[schema.registry.url]': ${SR_PROT:http}://${SR_HOST:web.poc.local}:${SR_PORT:8081}
              '[default.key.serde]': org.apache.kafka.common.serialization.Serdes$StringSerde
              '[default.value.serde]': io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
              '[default.deserialization.exception.handler]': org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
              '[processing.guarantee]': exactly_once
              '[state.dir]': ${STATE_DIR_ROOT:/tmp/ks-state}/${CONTAINER_NAME:local}
              '[application.server]': ${HOSTNAME:localhost}:${SERVER_PORT:8094}
            autoCreateTopics: false
            autoAddPartitions: false
            brokers:
              - ${BROKER_1:localhost:19091}
              - ${BROKER_2:localhost:19092}
              - ${BROKER_3:localhost:19093}

  application:
    name: task-processor
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${IDP_PROT:http}://${IDP_HOST:idp.poc.local}:${IDP_PORT:80}/auth/realms/corpauth/protocol/openid-connect/certs